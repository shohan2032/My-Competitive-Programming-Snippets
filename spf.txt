#include <bits/stdc++.h>

using namespace std;
#define db long long
#define ll long long
#define int ll
#define vi vector<int>
#define vs vector<string>
#define vpi vector<pair<int, int>>
#define vpd vector<pair<double, double>>
#define vps vector<pair<string, string>>
#define mp(x, y) make_pair(x, y)
#define pb(x) push_back(x)
#define pp(x) pop_back(x)
#define fr(cont) for (auto &i : (cont))
#define all(cont) cont.begin(), cont.end()
#define rall(cont) cont.rbegin(), cont.rend()

const ll N = 2e7 + 9;
int spf[N];
void sspf()//TC --> O(N*log(log(N)))
{
  for (ll i = 2; i < N; i++)
    spf[i] = i;
  for (ll i = 2; i*i <= N; i++) 
  {
     if(spf[i] == i)
     {
        for (ll j = i+i; j < N; j += i)
          if(spf[j] == j)
             spf[j] = i;
     }   
  }
}

void solve()
{
   int n;
   cin >> n;
   map<int,int>prime_factor;
   while(n != 1)//TC --> O(Log n)
   {
        prime_factor[spf[n]]++;
        n /= spf[n];
   }
   fr(prime_factor)
    cout << i.first << " " << i.second << endl;
}   

int32_t main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    sspf();
    // auto st = clock();
    int t = 1;
    cin >> t;
    while (t--)
        solve();

    // cerr << 1.0*(clock()-st)/CLOCKS_PER_SEC << endl;
    return 0;
}
/*Problem_link

*/